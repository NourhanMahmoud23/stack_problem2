#include<iostream>
using namespace std;


class stack
{
    int* arr;   
    int* top;  
    int* next;  
    int n, k;
    int free; 
public:
    
    stack(int k, int n);


    bool isFull() { return (free == -1); }

   
    void push(int item, int sn);


    int pop(int sn);

   
    bool isEmpty(int sn) { return (top[sn] == -1); }
};


stack::stack(int k1, int n1)
{
   
    k = k1, n = n1;
    arr = new int[n];
    top = new int[k];
    next = new int[n];


    for (int i = 0; i < k; i++)
        top[i] = -1;

    free = 0;
    for (int i = 0; i < n - 1; i++)
        next[i] = i + 1;
    next[n - 1] = -1;  
}


void stack::push(int item, int sn)
{
 
    if (isFull())
    {
        cout << "\nStack Overflow\n";
        return;
    }

    int i = free;      

  
    free = next[i];

  
    next[i] = top[sn];
    top[sn] = i;


    arr[i] = item;
}


int stack::pop(int sn)
{

    if (isEmpty(sn))
    {
        cout << "\nStack Underflow\n";
        return INT_MAX;
    }



    int i = top[sn];

    top[sn] = next[i];  

    
    next[i] = free;
    free = i;


    return arr[i];
}


int main()
{
   
    int k = 3, n = 10;
    stack s(k, n);

  
    s.push(15, 2);
    s.push(45, 2);

   
    s.push(19, 1);
    s.push(50, 1);
    s.push(80, 1);

 
    s.push(11, 0);
    s.push(9, 0);
    s.push(10, 0);

    cout << "Popped element from stack 2 is " << s.pop(15) << endl;
    cout << "Popped element from stack 1 is " << s.pop(50) << endl;
    cout << "Popped element from stack 0 is " << s.pop(10) << endl;

    return 0;
}
